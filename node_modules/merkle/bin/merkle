#!/usr/bin/env node
var merkle   = require('../merkle');
var pjson    = require('../package.json');
var optimist = require('optimist')
  .usage('Build a Merkle Tree and prints its values.\nUsage: $0 [leaf...]')
  .describe('version', 'Prints version')
  .describe('help', 'Prints help')
  .describe('l', 'Prints values of the given level. Defaults to 0 (root).')
  .describe('n', 'Prints the number of nodes for the given leaves.')
  .describe('c', 'Prints the number of levels for the given leaves.')
  .describe('h', 'Hash algorithm to apply on leaves. Values are \'sha1\', \'md5\' or \'none\'.')
  .describe('a', 'Prints all levels of Merkle tree, from leaves to root.')
  .describe('lowercase', 'Build trees using lowercase for hashes.')
  .alias('l', 'level')
  .alias('c', 'count')
  .alias('n', 'nodes')
  .alias('h', 'hash')
  .alias('a', 'all')
  .default({
    level: 0,
    hash: 'sha1'
  })
  ;

var argv = optimist.argv;

if(argv.help){
  console.log(optimist.help());
  return;
}

if(argv.version){
  console.log(pjson.version);
  return;
}

// Parameters OK

var m = merkle(argv.hash, !argv.lowercase).sync(argv._);

if(argv.nodes){
  console.log(m.nodes());
  return;
}

if(argv.count){
  console.log(m.levels());
  return;
}


if(argv.all){
  for(var i = 0; i < m.levels(); i++){
    m.level(i).forEach(function (val) {
      console.log(val);
    });
    console.log();
  }
  return;
}
else if(argv.level >= 0){
  var values = m.level(argv.level);
  if(values){
    values.forEach(function (val) {
      console.log(val);
    });
  }
  return;
}
